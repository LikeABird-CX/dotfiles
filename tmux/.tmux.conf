# good practice: don't use different aliases for the same command
#   set  --> set-option
#   setw --> set-window-option
#   run  --> run-shell
#   bind --> bind-key
#       -r flag: enable keep hitting bind key without prefix
#       -n flag: enable bind key without prefix
#       -g flag: global
# {{{ work with tmux version 2.1 }}}

# 0 is too far from ` ;)
# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# use C-a, since it's on the home row and easier to hit than C-b
set -g prefix ^q
unbind ^b
bind q send-prefix

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "[^\w]*g?(view|n?vim?)(diff)?.*"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

# User Alt-Arrow keys without prefix key to resize panes
bind -n M-Up    resize-pane -U 3
bind -n M-Down  resize-pane -D 3
bind -n M-Left  resize-pane -L 3
bind -n M-Right resize-pane -R 3

bind -n M-[ previous-window
bind -n M-] next-window

# create new window, pane with current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

set -g status-keys vi

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind [ copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy V rectangle-toggle
bind ] paste-buffer

# FIX http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# correct color: http://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux
set -g default-terminal "xterm-256color"

# Automatically set window title
set -g set-titles on
# set -g set-titles-string '#h ‚ùê #S ‚óè #I #W #{pane_current_path}'
set -g set-titles-string '#Süìé #h üîñ #{pane_current_path}'
setw -g automatic-rename on

# Status Bar
set -g status-utf8 on
# set -g status-interval 1
set -g status-left ''
set -g status-right-length 120
# set -g status-right '#{pane_current_path} ‚óÄ %m-%d %l:%M %p (#{session_name})'
set -g status-right ' ‚óÄ %m-%d %l:%M %p (#{session_name}) #{prefix_highlight}'
set -g status-bg default
set -g status-fg green
set -g pane-active-border-fg green
set -g pane-border-fg default

# window status
setw -g utf8 on
setw -g mode-bg white
setw -g mode-fg black
setw -g window-status-current-format "#[bg=default]#[fg=#38C4F2]#I*#[bg=white]#[fg=black]#W"
setw -g window-status-format "#[bg=default]#[fg=default]#I#[bg=#000000]#[fg=#444444]#W"
#setw -g window-status-current-bg colour0
#setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg default
setw -g window-status-fg default
setw -g window-status-attr reverse
# 24 hour clock
setw -g clock-mode-style 24

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

# increase scrollback lines
set -g history-limit 100000

# mouse behavior
set -g mouse-utf8 on
setw -g mouse on

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# List of plugins {{{

# Installs and loads TMUX plugins.
# https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Enables copying to system clipboard in Tmux.
# https://github.com/tmux-plugins/tmux-yank.git
set -g @plugin 'tmux-plugins/tmux-yank'

# Plugin for opening highlighted selection directly from Tmux copy mode.
# https://github.com/tmux-plugins/tmux-open.git
set -g @plugin 'tmux-plugins/tmux-open'

# Restore tmux environment after system restart.
# https://github.com/tmux-plugins/tmux-continuum
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# enable automatic restore
set -g @continuum-restore 'on'

# https://github.com/tmux-plugins/tmux-prefix-highlight
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# https://github.com/tmux-plugins/tmux-fpp.git
set -g @plugin 'tmux-plugins/tmux-fpp'
# https://github.com/tmux-plugins/tmux-urlview
set -g @plugin 'tmux-plugins/tmux-urlview'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# }}}

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
